//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceCheckList.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ServiceCheckList.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to wmic bios get smbiosbiosversion.
        /// </summary>
        internal static string BiosVersion {
            get {
                return ResourceManager.GetString("BiosVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Options]
        ///HomeScreen=1
        ///DefaultDetailedView=2
        ///BCD=0,
        ///FTU=18/10/2019|3|1
        ///GD=57407589-81ff-495c-9c45-0d38505fb6f5
        ///WipeFreeSpaceDrives=
        ///LatestICS=5.63.7540
        ///CookiesToSave=.avast.com|.ccleaner.com|.ccleanercloud.com|.piriform.com|facebook.com|google.com|twitter.com|www.google.com|yahoo.com
        ///RunICS=0
        ///Monitoring=0
        ///NewVersion=
        ///UpdateKey=10/18/2019 04:32:03 PM
        ///CheckTrialOffer=2
        ///(Cfg)TTL= 86400
        ///(Cfg)TTL-Spread= 43200
        ///(Cfg)GetIpmForTrial=1
        ///(Cfg)HealthCheck=0
        ///(Cfg)HealthCheckShowEvent=0
        ///(Cfg)QuickClean [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CCleanerINI {
            get {
                return ResourceManager.GetString("CCleanerINI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get-PhysicalDisk | Select FriendlyName, MediaType.
        /// </summary>
        internal static string CheckSSD {
            get {
                return ResourceManager.GetString("CheckSSD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to echo y|chkdsk /r c:.
        /// </summary>
        internal static string CHKDSK {
            get {
                return ResourceManager.GetString("CHKDSK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ckeck_black {
            get {
                object obj = ResourceManager.GetObject("ckeck_black", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ckeck_white {
            get {
                object obj = ResourceManager.GetObject("ckeck_white", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @ECHO OFF
        ///
        ///del &quot;c:\users\%username%\desktop\Microsoft Edge.lnk&quot;
        ///del &quot;c:\users\public\desktop\Acrobat Reader DC.lnk&quot;
        ///del &quot;c:\users\public\desktop\Malwarebytes.lnk&quot;
        ///del &quot;c:\users\public\desktop\VLC media player.lnk&quot;
        ///del &quot;c:\users\public\desktop\AnyDesk.lnk&quot;
        ///
        ///:: kill and restart explorer
        ///taskkill /f /im explorer.exe
        ///start explorer.exe.
        /// </summary>
        internal static string DeleteShortCut {
            get {
                return ResourceManager.GetString("DeleteShortCut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to c:\windows\SYSTEM32\cleanmgr.exe /dC:.
        /// </summary>
        internal static string DiskCleanup {
            get {
                return ResourceManager.GetString("DiskCleanup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to devmgmt.msc.
        /// </summary>
        internal static string Drivers {
            get {
                return ResourceManager.GetString("Drivers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap failed_black {
            get {
                object obj = ResourceManager.GetObject("failed_black", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @ECHO OFF
        ///
        ///
        ///:: kill all open processes
        ///cd c:\windows\System32
        ///for /f &quot;skip=3 tokens=1&quot; %%i in (&apos;TASKLIST /FI &quot;USERNAME eq %userdomain%%username%&quot; /FI &quot;STATUS eq running&quot;&apos;) do (
        ///if not &quot;%%i&quot;==&quot;svchost.exe&quot; (
        ///if not &quot;%%i&quot;==&quot;cmd.exe&quot; (
        ///if not &quot;%%i&quot;==&quot;tasklist.exe&quot; (
        ///if not &quot;%%i&quot;==&quot;servicechecklist.exe&quot; (
        ///taskkill /f /im &quot;%%i&quot;
        ///)
        ///)
        ///)
        ///)
        ///
        ///:: kill and restart explorer
        ///::taskkill /f /im explorer.exe
        ///start explorer.exe.
        /// </summary>
        internal static string KillOpenProcess {
            get {
                return ResourceManager.GetString("KillOpenProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///
        ///
        ///:: show my computer icon
        ///reg add HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\ClassicStartMenu /v {20D04FE0-3AEA-1069-A2D8-08002B30309D} /t REG_DWORD /d 0 /f
        ///reg add HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel /v {20D04FE0-3AEA-1069-A2D8-08002B30309D} /t REG_DWORD /d 0 /f
        ///
        ///:: show user folder
        ///reg add HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\HideDesktopIcons\NewStartPanel /v {59031a47-3f72-44a7-89c5-5595 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PowerSettings {
            get {
                return ResourceManager.GetString("PowerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to control update.
        /// </summary>
        internal static string WindowsUpdates {
            get {
                return ResourceManager.GetString("WindowsUpdates", resourceCulture);
            }
        }
    }
}
